/* PREFERENCES FILE PLIST: The standard method of writing/reading preferences in OS X is with the CFPreferences API. The first time you run the app it will display -1, because no preferences entry exists for "My Long Value". Subsequent runs will show 12345678. The preferences file is: /Users/yourname/Library/Preferences/appname.plistAfter quitting your app, you can double-click that file to view it in the Property List Editor and edit the "My Long Value" entry. (Robert Purves)*///--| PREFERENCES PLIST in OSX |-----//#if def _FBtoC  include "Util_CFPrefs.incl"#else// simplified extracts from CFPrefs.incl_kCFNumberIntType = 9toolbox fn CFNumberCreate( CFAllocatorRef allocator, CFNumberType theType, ptr *valuePtr ) = CFNumberReftoolbox fn CFPreferencesGetAppIntegerValue( CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat ) = CFIndextoolbox fn CFPreferencesSetAppValue( CFStringRef key, CFPropertyListRef value, CFStringRef applicationID )local modelocal fn CFPrefsGetApplicationID as CFStringRef'~'1end fn = fn CFSTR( "kCFPreferencesCurrentApplication" )local modelocal fn CFPrefsGetLong( key as Str255, @value as ^long, default as long )'~'1dim as CFStringRef keyStrdim as Boolean @ fromPrefs : fromPrefs = _falsekeyStr = fn CFStringCreateWithPascalString( 0, key, _kCFStringEncodingMacRoman )long if ( keyStr )value.nil& = fn CFPreferencesGetAppIntegerValue( keyStr, fn CFPrefsGetApplicationID, @fromPrefs )CFRelease( keyStr )end ifif ( fromPrefs == _false ) then value.nil& = defaultend fn = fromPrefslocal modelocal fn CFPrefsSetLong( key as Str255, setVal as long )'~'1dim as CFStringRef keyStrdim as CFNumberRef valueRefdim as CFIndex @ valuevalue = setVal // RAM var copyvalueRef = fn CFNumberCreate( 0, _kCFNumberIntType, @value )long if ( valueRef )keyStr = fn CFStringCreateWithPascalString( 0, key, _kCFStringEncodingMacRoman )long if ( keyStr )CFPreferencesSetAppValue( keyStr, valueRef, fn CFPrefsGetApplicationID )CFRelease( keyStr )end ifCFRelease( valueRef )end ifend fn#endif // def _FBtoC/*// main program_myLongValKey$ = "My Long Value"dim as long @ valuefn CFPrefsGetLong( _myLongValKey$, @value, -1 )print _myLongValKey$; valuedoHandleEventsuntil gFBQuitfn CFPrefsSetLong( _myLongValKey$, 12345678 )fn CFPrefsAppSynchronizeend */