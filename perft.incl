// PERFT (diagnostic and performance test)// Craftyness supplied by: Robert Purves// September 27, 2010local modelocal fn perft( inBoard as ^boardRecord, depth as long ) as SInt64'~'1dim as SInt64      nodesdim as long        nLegal, jdim as moveRecord  moves(_maxMoves)dim as boardRecord boardnLegal = fn generateLegalMoves( inBoard, moves(0) )long if ( depth == 1 )nodes = nLegalxelsenodes = 0for j = 0 to nLegal - 1fn copyBoard( inBoard, board )fn makeMove( board, moves(j) )nodes += fn perft( board, depth - 1 )nextend ifend fn = nodeslocal fn runPerft (perftDepth as long)dim as long         depthdim as SInt64       nTotaldim as boardRecord  perftBoarddim as long         t/*Correct results from NEW: 1  202  4003  89024  1972815  48656096  1190603247  31959018608  849989789569  243953023416710 6935285971241711 209765100369680612 62854969236701747*///fn initBoard_classic( perftBoard )fn copyBoard(gBoard, perftBoard)edit$(8) = "PERFT Diagnostic"if (perftDepth < 1) or (perftDepth > 7) then perftDepth = 5for depth = 1 to perftDeptht = fn MillisecondsnTotal = fn perft( perftBoard, depth )t = fn Milliseconds - tedit$(8) = edit$(8) + " ¥ " + str$( depth ) + ":" + str$( nTotal ) + " (" + right$( str$(t), len(str$(t))-1 ) + "ms" + ") "nextedit$(9)=""end fn